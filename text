CREATE TABLE time_tracking (
    tracking_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    check_in TIMESTAMP NOT NULL,
    check_out TIMESTAMP,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);

CREATE TABLE attendance_management (
    attendance_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    date DATE NOT NULL,
    status VARCHAR(50) NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);

CREATE TABLE time_off_requests (
    request_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    status VARCHAR(50) NOT NULL,
    request_date TIMESTAMP NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);

CREATE TABLE reporting_tools (
    report_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    report_type VARCHAR(50) NOT NULL,
    generated_date TIMESTAMP NOT NULL,
    -- Add other fields as needed
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);
CREATE TABLE scheduling (
    schedule_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    shift_start DATETIME NOT NULL,
    shift_end DATETIME NOT NULL,
    -- Add other fields as needed
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);
CREATE TABLE notifications (
    notification_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    content TEXT NOT NULL,
    sent_at TIMESTAMP NOT NULL,
    is_read BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);
CREATE TABLE shift_preferences (
    preference_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    preferred_shift_start TIME NOT NULL,
    preferred_shift_end TIME NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);
CREATE TABLE time_off_types (
    type_id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(50) NOT NULL
);


CREATE TYPE time_off_status AS ENUM ('Pending', 'Approved', 'Rejected');

CREATE TABLE time_off_requests (
    request_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    status time_off_status NOT NULL,
    request_date TIMESTAMP NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
);


employee_id  
| username      
| password      
| full_name     
| email         
| phone_number  
| address       
| date_of_birth 
| hire_date     
| salary        
| department    
| job_title 